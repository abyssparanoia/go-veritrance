openapi: 3.0.2
info:
  title: Veritrance API
  version: 3.0.0
  contact:
    name: Veritrance
  description: |
    Veritrance API

servers:
  - url: "https://api.veritrans.co.jp:443"
    description: Production
paths:
  "/paynow/v2/Add/account":
    post:
      operationId: paynow-v2-add-account
      summary: 会員情報を追加します。
      description: |
        ・会員 ID を登録します。
        ・会員 ID の登録と同時に、カード情報および継続課金情報を紐付けることが可能です。
          継続課金情報を設定する際は、カード情報の同時設定が必要です。
          カード情報を指定した場合、有効性確認が行われます。
        ・会員 ID の登録と同時に、カード情報のみを紐付けることが可能です。
      tags:
        - Account
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/AccountResponse
  "/paynow/v2/Update/account":
    post:
      operationId: paynow-v2-update-account
      summary: 会員 ID の「入会年月日」を更新します。
      description: |
        ・会員 ID の「入会年月日」を更新します。
      tags:
        - Account
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/PayNowIdResponse
  "/paynow/v2/Delete/account":
    post:
      operationId: paynow-v2-delete-account
      summary: 会員 ID の会員情報を、指定された「退会年月日」に削除します。
      description: |
        ・会員 ID の会員情報を、指定された「退会年月日」に削除します。
      tags:
        - Account
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/PayNowIdResponse
  "/paynow/v2/Get/cardinfo":
    post:
      operationId: paynow-v2-get-cardinfo
      summary: 会員 ID に紐付けられた課金情報を取得します
      description: |
        ・会員 ID に紐付けられた課金情報を取得します。
      tags:
        - Cardinfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/AccountResponse
  "/paynow/v2/Add/cardinfo":
    post:
      operationId: paynow-v2-add-cardinfo
      summary: 会員 ID にカード情報を紐付けて登録します
      description: |
        ・会員 ID にカード情報を紐付けて登録します。
        ・当該会員 ID に複数のカード情報を紐付けることが可能です。 ただし、同じカード情報を 2 回登録することはできません。
          （一度削除したカード情報を、再度登録することは可能です）
      tags:
        - Cardinfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/AccountResponse
  "/paynow/v2/Update/cardinfo":
    post:
      operationId: paynow-v2-update-cardinfo
      summary: 当該会員 ID、およびカード ID に紐付けられたカード情報を更新します
      description: |
        ・当該会員 ID、およびカード ID に紐付けられたカード情報を更新します。 
      tags:
        - Cardinfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/AccountResponse
  "/paynow/v2/Delete/cardinfo":
    post:
      operationId: paynow-v2-delete-cardinfo
      summary: 会員 ID に紐付けられたカード情報を削除します
      description: |
        ・会員 ID に紐付けられたカード情報を削除します。
      tags:
        - Cardinfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/PayNowIdResponse
  "/paynow/v2/Authorize/card":
    post:
      operationId: paynow-v2-authorize-cardinfo
      summary: 決済の与信を行います
      tags:
        - Card
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/CardAuthorizeResponse
  "/paynow/v2/ReAuthorize/card":
    post:
      operationId: paynow-v2-reAuthorize-cardinfo
      summary: 決済の再与信を行います
      tags:
        - Card
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/CardAuthorizeResponse
  "/paynow/v2/Capture/card":
    post:
      operationId: paynow-v2-capture-cardinfo
      summary: 決済の売上確定を行います
      tags:
        - Card
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/CardCaptureResponse
  "/paynow/v2/Cancel/card":
    post:
      operationId: paynow-v2-cancel-cardinfo
      summary: 決済のキャンセルを行います
      tags:
        - Card
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - params
                - authHash
              properties:
                params:
                  type: string
                authHash:
                  type: string
      responses:
        "200":
          description: 成功した場合
          content:
            application/json:
              schema:
                $ref: ./models/response.v2.yaml#/CardCancelResponse
components:
  schemas:
    AccountAddRequest:
      type: object
      required:
        - accountId
      properties:
        accountId:
          type: string
          example: account-1662828780
        cardNumber:
          type: string
          example: 4111111111111111
        cardExpire:
          type: string
          example: 12/25
        securityCode:
          type: string
          example: 123
    AccountDeleteRequest:
      type: object
      required:
        - accountId
      properties:
        accountId:
          type: string
          example: account-1662828780
    AccountUpdateRequest:
      type: object
      required:
        - accountId
      properties:
        accountId:
          type: string
          example: account-1662828780
    CardInfoGetRequest:
      type: object
      required:
        - accountId
      properties:
        accountId:
          type: string
          example: account-1662828780
    CardInfoAddRequest:
      type: object
      required:
        - token
      properties:
        accountId:
          type: string
          example: account-1662828780
        token:
          type: string
          example: 80b66157-6f6f-4a38-a6e4-43e306f0084f
        cardNumber:
          type: string
          example: 4111111111111111
        cardExpire:
          type: string
          example: 12/25
        securityCode:
          type: string
          example: 123
    CardInfoUpdateRequest:
      type: object
      required:
        - accountId
        - cardId
        - cardNumber
        - cardExpire
        - securityCode
      properties:
        accountId:
          type: string
          example: account-1662828780
        cardId:
          type: string
          example: card-1662828780
        cardNumber:
          type: string
          example: 4111111111111111
        cardExpire:
          type: string
          example: 12/25
        securityCode:
          type: string
          example: 123
    CardInfoDeleteRequest:
      type: object
      required:
        - accountId
      properties:
        accountId:
          type: string
          example: account-1662828780
        cardId:
          type: string
          example: card-1662828780
    CardAuthorizeRequest:
      type: object
      required:
        - orderId
        - originalOrderId
      properties:
        orderId:
          type: string
          example: order-1662828780
        originalOrderId:
          type: string
          example: order-1662828781
        amount:
          type: string
          example: 1000
        token:
          type: string
          example: abcdef01-2345-6789-abcd-ef0123456789
          description: トークンサーバーが発行した、クレジットカード情報の識別に用いるトークンの値
        cardNumber:
          type: string
          example: 4111111111111111
          description: （重要）カード情報の非保持（非通過、非保持）への対応のため、通常は設定しないでください。
        cardExpire:
          type: string
          example: 12/25
          description: （重要）カード情報の非保持（非通過、非保持）への対応のため、通常は設定しないでください。
        securityCode:
          type: string
          example: 123
          description: （重要）カード情報の非保持（非通過、非保持）への対応のため、通常は設定しないでください。
        cardOptionType:
          description: カードオプションタイプ （MPI 有り/無し）
          enum:
            - mpi
        jpo:
          type: string
          description: |
            支払種別
            "10"： 一括払い
            "21"： ボーナス一括
            "61Cxx"： 分割払い、xx に分割回数指定
            “80”： リボルビング払い
            ※指定が無い場合は、"10"（一括払い）が適用されます。
        withCapture:
          type: boolean
          description: |
            売上フラグ
            "true"： 与信・売上
            "false"： 与信のみ
    CardReAuthorizeRequest:
      type: object
      required:
        - orderId
        - amount
      properties:
        orderId:
          type: string
          example: order-1662828780
        amount:
          type: string
          example: 1000
        token:
          type: string
          example: abcdef01-2345-6789-abcd-ef0123456789
          description: トークンサーバーが発行した、クレジットカード情報の識別に用いるトークンの値
        cardNumber:
          type: string
          example: 4111111111111111
          description: （重要）カード情報の非保持（非通過、非保持）への対応のため、通常は設定しないでください。
        cardExpire:
          type: string
          example: 12/25
          description: （重要）カード情報の非保持（非通過、非保持）への対応のため、通常は設定しないでください。
        securityCode:
          type: string
          example: 123
          description: （重要）カード情報の非保持（非通過、非保持）への対応のため、通常は設定しないでください。
        cardOptionType:
          description: カードオプションタイプ （MPI 有り/無し）
          enum:
            - mpi
        jpo:
          type: string
          description: |
            支払種別
            "10"： 一括払い
            "21"： ボーナス一括
            "61Cxx"： 分割払い、xx に分割回数指定
            “80”： リボルビング払い
            ※指定が無い場合は、"10"（一括払い）が適用されます。
        withCapture:
          type: boolean
          description: |
            売上フラグ
            "true"： 与信・売上
            "false"： 与信のみ
    CardCaptureRequest:
      type: object
      required:
        - orderId
        - amount
      properties:
        orderId:
          type: string
          example: order-1662828780
        amount:
          type: string
          example: 1000
    CardCancelRequest:
      type: object
      required:
        - orderId
        - amount
      properties:
        orderId:
          type: string
          example: order-1662828780
        amount:
          type: string
          example: 1000
