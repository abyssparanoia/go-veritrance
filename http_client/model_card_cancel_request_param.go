/*
Veritrance API

Veritrance API Requestの形式はcomponentsを参照。文字列にしたものを各Requestのparamsに用いる 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package veritrance_paynow

import (
	"encoding/json"
)

// CardCancelRequestParam struct for CardCancelRequestParam
type CardCancelRequestParam struct {
	OrderId string `json:"orderId"`
	Amount string `json:"amount"`
	CurrencyUnit CurrencyUnit `json:"currencyUnit"`
}

// NewCardCancelRequestParam instantiates a new CardCancelRequestParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardCancelRequestParam(orderId string, amount string, currencyUnit CurrencyUnit) *CardCancelRequestParam {
	this := CardCancelRequestParam{}
	this.OrderId = orderId
	this.Amount = amount
	this.CurrencyUnit = currencyUnit
	return &this
}

// NewCardCancelRequestParamWithDefaults instantiates a new CardCancelRequestParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardCancelRequestParamWithDefaults() *CardCancelRequestParam {
	this := CardCancelRequestParam{}
	return &this
}

// GetOrderId returns the OrderId field value
func (o *CardCancelRequestParam) GetOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *CardCancelRequestParam) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *CardCancelRequestParam) SetOrderId(v string) {
	o.OrderId = v
}

// GetAmount returns the Amount field value
func (o *CardCancelRequestParam) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CardCancelRequestParam) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CardCancelRequestParam) SetAmount(v string) {
	o.Amount = v
}

// GetCurrencyUnit returns the CurrencyUnit field value
func (o *CardCancelRequestParam) GetCurrencyUnit() CurrencyUnit {
	if o == nil {
		var ret CurrencyUnit
		return ret
	}

	return o.CurrencyUnit
}

// GetCurrencyUnitOk returns a tuple with the CurrencyUnit field value
// and a boolean to check if the value has been set.
func (o *CardCancelRequestParam) GetCurrencyUnitOk() (*CurrencyUnit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyUnit, true
}

// SetCurrencyUnit sets field value
func (o *CardCancelRequestParam) SetCurrencyUnit(v CurrencyUnit) {
	o.CurrencyUnit = v
}

func (o CardCancelRequestParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["orderId"] = o.OrderId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["currencyUnit"] = o.CurrencyUnit
	}
	return json.Marshal(toSerialize)
}

type NullableCardCancelRequestParam struct {
	value *CardCancelRequestParam
	isSet bool
}

func (v NullableCardCancelRequestParam) Get() *CardCancelRequestParam {
	return v.value
}

func (v *NullableCardCancelRequestParam) Set(val *CardCancelRequestParam) {
	v.value = val
	v.isSet = true
}

func (v NullableCardCancelRequestParam) IsSet() bool {
	return v.isSet
}

func (v *NullableCardCancelRequestParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardCancelRequestParam(val *CardCancelRequestParam) *NullableCardCancelRequestParam {
	return &NullableCardCancelRequestParam{value: val, isSet: true}
}

func (v NullableCardCancelRequestParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardCancelRequestParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


