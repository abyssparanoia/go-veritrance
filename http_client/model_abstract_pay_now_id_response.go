/*
Veritrance API

Veritrance API 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package veritrance_paynow

import (
	"encoding/json"
)

// AbstractPayNowIdResponse struct for AbstractPayNowIdResponse
type AbstractPayNowIdResponse struct {
	// 会員管理処理を一意に識別する番号
	ProcessId string `json:"processId"`
	// 会員管理処理要求の実行結果
	Status string `json:"status"`
	// 会員管理処理要求の実行結果メッセージ
	Message string `json:"message"`
}

// NewAbstractPayNowIdResponse instantiates a new AbstractPayNowIdResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbstractPayNowIdResponse(processId string, status string, message string) *AbstractPayNowIdResponse {
	this := AbstractPayNowIdResponse{}
	this.ProcessId = processId
	this.Status = status
	this.Message = message
	return &this
}

// NewAbstractPayNowIdResponseWithDefaults instantiates a new AbstractPayNowIdResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbstractPayNowIdResponseWithDefaults() *AbstractPayNowIdResponse {
	this := AbstractPayNowIdResponse{}
	return &this
}

// GetProcessId returns the ProcessId field value
func (o *AbstractPayNowIdResponse) GetProcessId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value
// and a boolean to check if the value has been set.
func (o *AbstractPayNowIdResponse) GetProcessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessId, true
}

// SetProcessId sets field value
func (o *AbstractPayNowIdResponse) SetProcessId(v string) {
	o.ProcessId = v
}

// GetStatus returns the Status field value
func (o *AbstractPayNowIdResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AbstractPayNowIdResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AbstractPayNowIdResponse) SetStatus(v string) {
	o.Status = v
}

// GetMessage returns the Message field value
func (o *AbstractPayNowIdResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AbstractPayNowIdResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AbstractPayNowIdResponse) SetMessage(v string) {
	o.Message = v
}

func (o AbstractPayNowIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["processId"] = o.ProcessId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableAbstractPayNowIdResponse struct {
	value *AbstractPayNowIdResponse
	isSet bool
}

func (v NullableAbstractPayNowIdResponse) Get() *AbstractPayNowIdResponse {
	return v.value
}

func (v *NullableAbstractPayNowIdResponse) Set(val *AbstractPayNowIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAbstractPayNowIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAbstractPayNowIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbstractPayNowIdResponse(val *AbstractPayNowIdResponse) *NullableAbstractPayNowIdResponse {
	return &NullableAbstractPayNowIdResponse{value: val, isSet: true}
}

func (v NullableAbstractPayNowIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbstractPayNowIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


