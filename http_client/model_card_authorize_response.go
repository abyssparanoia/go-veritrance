/*
Veritrance API

Veritrance API Requestの形式はcomponentsを参照。文字列にしたものを各Requestのparamsに用いる 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package veritrance_paynow

import (
	"encoding/json"
)

// CardAuthorizeResponse struct for CardAuthorizeResponse
type CardAuthorizeResponse struct {
	PayNowIdResponse *AccountResponsePayNowIdResponse `json:"payNowIdResponse,omitempty"`
	Result *CardAuthorizeResponseResult `json:"result,omitempty"`
}

// NewCardAuthorizeResponse instantiates a new CardAuthorizeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardAuthorizeResponse() *CardAuthorizeResponse {
	this := CardAuthorizeResponse{}
	return &this
}

// NewCardAuthorizeResponseWithDefaults instantiates a new CardAuthorizeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardAuthorizeResponseWithDefaults() *CardAuthorizeResponse {
	this := CardAuthorizeResponse{}
	return &this
}

// GetPayNowIdResponse returns the PayNowIdResponse field value if set, zero value otherwise.
func (o *CardAuthorizeResponse) GetPayNowIdResponse() AccountResponsePayNowIdResponse {
	if o == nil || o.PayNowIdResponse == nil {
		var ret AccountResponsePayNowIdResponse
		return ret
	}
	return *o.PayNowIdResponse
}

// GetPayNowIdResponseOk returns a tuple with the PayNowIdResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAuthorizeResponse) GetPayNowIdResponseOk() (*AccountResponsePayNowIdResponse, bool) {
	if o == nil || o.PayNowIdResponse == nil {
		return nil, false
	}
	return o.PayNowIdResponse, true
}

// HasPayNowIdResponse returns a boolean if a field has been set.
func (o *CardAuthorizeResponse) HasPayNowIdResponse() bool {
	if o != nil && o.PayNowIdResponse != nil {
		return true
	}

	return false
}

// SetPayNowIdResponse gets a reference to the given AccountResponsePayNowIdResponse and assigns it to the PayNowIdResponse field.
func (o *CardAuthorizeResponse) SetPayNowIdResponse(v AccountResponsePayNowIdResponse) {
	o.PayNowIdResponse = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CardAuthorizeResponse) GetResult() CardAuthorizeResponseResult {
	if o == nil || o.Result == nil {
		var ret CardAuthorizeResponseResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAuthorizeResponse) GetResultOk() (*CardAuthorizeResponseResult, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CardAuthorizeResponse) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given CardAuthorizeResponseResult and assigns it to the Result field.
func (o *CardAuthorizeResponse) SetResult(v CardAuthorizeResponseResult) {
	o.Result = &v
}

func (o CardAuthorizeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PayNowIdResponse != nil {
		toSerialize["payNowIdResponse"] = o.PayNowIdResponse
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableCardAuthorizeResponse struct {
	value *CardAuthorizeResponse
	isSet bool
}

func (v NullableCardAuthorizeResponse) Get() *CardAuthorizeResponse {
	return v.value
}

func (v *NullableCardAuthorizeResponse) Set(val *CardAuthorizeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCardAuthorizeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCardAuthorizeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardAuthorizeResponse(val *CardAuthorizeResponse) *NullableCardAuthorizeResponse {
	return &NullableCardAuthorizeResponse{value: val, isSet: true}
}

func (v NullableCardAuthorizeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardAuthorizeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


